/* ========================================================================================================
// Урок от 14 марта 2025. Работа в классе - Практическая работа.
// ========================================================================================================

// ========================================================================================================
// Курс: Разработка интерфейса на JavaScript.
// ========================================================================================================

// ========================================================================================================
// Дисциплина: Основы  JavaScript.
// ========================================================================================================

// ========================================================================================================
// Занятие №20: Сохранение данных в браузере. Куки. Локальное хранилище.
// ========================================================================================================

// ========================================================================================================
// Решите данные задачи:
// --------------------------------------------------------------------------------------------------------
// 1. Напиши функцию, которая вставляет данные из формы в Cookie. И выводит их на экран приветствия. 
//    Если данных в Cookie нет, то выводить обращение к гостю. 
//    Слева есть форма с 3 полями. (Имя, телефон и возраст). Справа место, где нужно их вывести.
// --------------------------------------------------------------------------------------------------------
// 2. Модернизировать прошлую функцию. 
//    На этот раз сделать через LocalStorage. Есть страница для входа. И главная страница. 
//    Если мы залогинились правильно, то показывать админ панель иначе не показывать.
// --------------------------------------------------------------------------------------------------------
// 3. Напишите функцию, которая сохраняет пользовательские настройки. 
//    Пользователь вводит размер текста, цвет текста и выбирает начертание (жирный, курсив и нормальный). 
//    Кнопка сохранить настройки и сбросить настройки. 
//    Затем поле для ввода и кнопка отправить текст. Отправляет текст с настройками текста.
// ===================================================================================================== */










/* ==============================
   Общие стили для страницы
   ============================== */
   body {
    font-family: Arial, sans-serif; /* Устанавливаем шрифт для всей страницы */
    background-color: #f0f2f5; /* Устанавливаем фоновый цвет страницы */
    padding: 20px; /* Добавляем внутренний отступ вокруг содержимого страницы */
}


/* ==============================
   Контейнер для размещения блоков
   ============================== */
   .container {
    display: flex; /* Используем Flexbox для удобного расположения элементов */
    flex-wrap: wrap; /* Разрешаем перенос элементов на новую строку при нехватке места */
    gap: 20px; /* Добавляем расстояние между элементами в контейнере */
}


/* ==============================
   Общий стиль для секций
   ============================== */
   .section {
    background-color: #fff; /* Белый фон для секций */
    padding: 20px; /* Внутренний отступ внутри секции */
    border: 1px solid #ddd; /* Тонкая серая рамка */
    border-radius: 8px; /* Закругляем углы */
    flex: 1; /* Растягиваем блок на всю доступную ширину */
    min-width: 300px; /* Минимальная ширина блока — 300px */
}


/* ==============================
   Блок вывода данных
   ============================== */
   .output {
    flex-basis: 40%; /* Устанавливаем ширину блока вывода в 40% от ширины контейнера */
}


/* ==============================
   Стили для кнопок
   ============================== */
   button {
    background-color: #4caf50; /* Цвет фона кнопки (зелёный) */
    color: white; /* Цвет текста — белый */
    padding: 10px; /* Внутренний отступ в кнопке */
    border: none; /* Убираем рамку */
    cursor: pointer; /* Изменяем курсор при наведении */
    margin-top: 10px; /* Добавляем небольшой отступ сверху */
    margin-right: 5px; /* Отступ между кнопками */
    transition: background 0.3s; /* Плавное изменение фона при наведении */
}

/* Эффект при наведении на кнопку */
button:hover {
    background-color: #45a049; /* Темно-зелёный цвет при наведении */
}


/* ==============================
   Скрытые элементы (display: none)
   ============================== */
   .hidden {
    display: none; /* Полностью скрываем элемент */
}


/* Модальное окно */


/* ==============================
   Стили для модального окна
   ============================== */
   .modal {
    position: fixed; /* Фиксируем позицию на экране */
    top: 0;
    left: 0;
    width: 100vw; /* Ширина на весь экран */
    height: 100vh; /* Высота на весь экран */
    background-color: rgba(0, 0, 0, 0.6); /* Полупрозрачный тёмный фон */
    display: flex; /* Flexbox для центрирования содержимого */
    align-items: center; /* Центрируем содержимое по вертикали */
    justify-content: center; /* Центрируем содержимое по горизонтали */
    z-index: 100; /* Помещаем окно поверх других элементов */
    transition: opacity 0.3s ease; /* Плавное появление и исчезновение */
}


/* ==============================
   Скрытие модального окна через класс hidden
   ============================== */
   .modal.hidden {
    opacity: 0; /* Делаем модальное окно прозрачным */
    pointer-events: none; /* Отключаем возможность взаимодействия с элементами */
}


/* ==============================
   Содержимое модального окна
   ============================== */
   .modal-content {
    background-color: #ffffff; /* Белый фон для содержимого модального окна */
    padding: 20px; /* Внутренний отступ */
    border-radius: 8px; /* Закругляем углы */
    text-align: center; /* Выравнивание текста по центру */
    box-shadow: 0 4px 10px rgba(0,0,0,0.3); /* Тень для создания эффекта глубины */
}



